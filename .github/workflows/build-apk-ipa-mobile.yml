name: All Builds (Linux, macOS, Windows, Android, IPA, APK, AAB)

on:
  push:
    branches:
      - master
      - main
  pull_request:
    branches:
      - master
      - main
  workflow_dispatch:

env:
  BUILD_NUMBER: ${{ github.run_number }}
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.11.8
  FLUTTER_VERSION: 3.22.2

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: stable

    - name: Install Linux Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build libgtk-3-dev clang cmake
        flutter doctor --verbose

    - name: Get Flutter Dependencies
      run: flutter pub get
      working-directory: ./

    - name: Build Linux App
      run: |
        flutter config --no-analytics
        flet build linux --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
        ls -la build/linux/x64/release/bundle/
      working-directory: ./

    - name: Package AppImage
      run: |
        mkdir -p dist
        flutter build linux
        cp -r build/linux/x64/release/bundle/* dist/
      working-directory: ./

    - name: Upload Linux Artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: dist/*.AppImage
        if-no-files-found: error

  build-macos:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: stable

    - name: Get Flutter Dependencies
      run: flutter pub get
      working-directory: ./

    - name: Build macOS App
      run: |
        flutter config --no-analytics
        flet build macos --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
        ls -la build/macos/Build/Products/Release/
      working-directory: ./

    - name: Package macOS App
      run: |
        mkdir -p dist
        cp -r build/macos/Build/Products/Release/*.app dist/
      working-directory: ./

    - name: Upload macOS Artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: dist/*.app
        if-no-files-found: error

  build-windows:
    runs-on: windows-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: stable

    - name: Get Flutter Dependencies
      run: flutter pub get
      working-directory: ./

    - name: Build Windows App
      shell: cmd
      run: |
        flutter config --no-analytics
        flet build windows --verbose --build-number=%BUILD_NUMBER% --build-version=%BUILD_VERSION%
        dir build\windows\runner\Release\
      working-directory: ./

    - name: Package Windows App
      shell: cmd
      run: |
        mkdir dist
        copy build\windows\runner\Release\*.exe dist\
      working-directory: ./

    - name: Upload Windows Artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: dist/*.exe
        if-no-files-found: error

  build-aab:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: stable

    - name: Get Flutter Dependencies
      run: flutter pub get
      working-directory: ./

    - name: Build AAB
      run: |
        flutter config --no-analytics
        flet build aab --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
        ls -la build/app/outputs/bundle/release/
      working-directory: ./

    - name: Package AAB
      run: |
        mkdir -p dist
        cp build/app/outputs/bundle/release/*.aab dist/
      working-directory: ./

    - name: Upload AAB Artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-aab
        path: dist/*.aab
        if-no-files-found: error

  build-apk:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: stable

    - name: Get Flutter Dependencies
      run: flutter pub get
      working-directory: ./

    - name: Build APK
      run: |
        flutter config --no-analytics
        flet build apk --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
        ls -la build/app/outputs/flutter-apk/
      working-directory: ./

    - name: Package APK
      run: |
        mkdir -p dist
        cp build/app/outputs/flutter-apk/*.apk dist/
      working-directory: ./

    - name: Upload APK Artifact
      uses: actions/upload-artifact@v4
      with:
        name: android-apk
        path: dist/*.apk
        if-no-files-found: error

  build-ipa:
    runs-on: macos-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flet
        if [ -f "requirements.txt" ]; then pip install -r requirements.txt; fi

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.FLUTTER_VERSION }}
        channel: stable

    - name: Get Flutter Dependencies
      run: flutter pub get
      working-directory: ./

    - name: Build IPA
      run: |
        flutter config --no-analytics
        flet build ipa --verbose --build-number=${{ env.BUILD_NUMBER }} --build-version=${{ env.BUILD_VERSION }}
        ls -la build/ios/ipa/
      working-directory: ./

    - name: Package IPA
      run: |
        mkdir -p dist
        cp build/ios/ipa/*.ipa dist/
      working-directory: ./

    - name: Upload IPA Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-ipa
        path: dist/*.ipa
        if-no-files-found: error
